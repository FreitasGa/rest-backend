version: '3.8'

name: rest

services:
  database:
    container_name: rest-database
    image: postgres
    ports:
      - 5432:5432
    networks:
      - rest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rest

  cache:
    container_name: rest-cache
    image: redis
    ports:
      - 6379:6379
    networks:
      - rest
    command: [redis-server, --requirepass, "redis"]

  queue:
    container_name: rest-queue
    image: redis
    ports:
      - 6380:6379
    networks:
      - rest
    command: [redis-server, --requirepass, "redis"]

  storage:
    container_name: rest-storage
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - rest
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    command: [server, /data, --console-address, ":9001"]

  backend:
    container_name: rest-backend
    image: rest-backend
    build: .
    ports:
      - 3000:3000
    networks:
      - rest
    depends_on:
      - database
      - cache
      - queue
      - storage
    environment:
      - NODE_ENV=development
      - PORT
      - TZ
      - CORS_ORIGIN
      - AUTH_SECRET
      - AUTH_ACCESS_TOKEN_EXPIRES_IN
      - AUTH_ID_TOKEN_EXPIRES_IN
      - AUTH_REFRESH_TOKEN_EXPIRES_IN
      - EMAIL_HOST
      - EMAIL_PORT
      - EMAIL_SECURE
      - EMAIL_USERNAME
      - EMAIL_PASSWORD
      - EMAIL_FROM
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/rest?schema=public
      - CACHE_HOST=cache
      - CACHE_PORT=6379
      - CACHE_PASSWORD
      - QUEUE_HOST=queue
      - QUEUE_PORT=6379
      - QUEUE_PASSWORD
      - QUEUE_EMAIL_ATTEMPTS
      - QUEUE_EMAIL_DELAY
      - STORAGE_HOST=storage
      - STORAGE_PORT
      - STORAGE_USER
      - STORAGE_PASSWORD

networks:
  rest:
    name: rest
    driver: bridge